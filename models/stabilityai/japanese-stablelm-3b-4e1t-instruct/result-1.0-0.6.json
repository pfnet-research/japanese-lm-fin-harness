{
  "results": {
    "security_sales_1-1.0-0.6": {
      "acc,none": 0.45614035087719296,
      "acc_stderr,none": 0.06655775300696491,
      "acc_norm,none": 0.45614035087719296,
      "acc_norm_stderr,none": 0.06655775300696491,
      "map,none": 0.6973684210526315,
      "map_stderr,none": 0.03810095714557176,
      "map_2,none": 0.6491228070175439,
      "map_2_stderr,none": 0.048416194227948635,
      "map_3,none": 0.6842105263157895,
      "map_3_stderr,none": 0.041443472917678414,
      "map_4,none": 0.6973684210526315,
      "map_4_stderr,none": 0.03810095714557176,
      "map_norm,none": 0.6871345029239766,
      "map_norm_stderr,none": 0.03964831109639494,
      "map_2_norm,none": 0.631578947368421,
      "map_2_norm_stderr,none": 0.05087935351043054,
      "map_3_norm,none": 0.6608187134502923,
      "map_3_norm_stderr,none": 0.04569402621370772,
      "map_4_norm,none": 0.6871345029239766,
      "map_4_norm_stderr,none": 0.03964831109639494,
      "alias": "security_sales_1-1.0-0.6"
    },
    "fp2-1.0-0.6": {
      "acc,none": 0.2463157894736842,
      "acc_stderr,none": 0.01979026746533387,
      "acc_norm,none": 0.2463157894736842,
      "acc_norm_stderr,none": 0.01979026746533387,
      "map,none": 0.5150877192982464,
      "map_stderr,none": 0.01337558709563313,
      "map_2,none": 0.3642105263157895,
      "map_2_stderr,none": 0.01908308783669298,
      "map_3,none": 0.4498245614035095,
      "map_3_stderr,none": 0.016653520145160968,
      "map_4,none": 0.5150877192982464,
      "map_4_stderr,none": 0.01337558709563313,
      "map_norm,none": 0.5150877192982464,
      "map_norm_stderr,none": 0.01337558709563313,
      "map_2_norm,none": 0.3642105263157895,
      "map_2_norm_stderr,none": 0.01908308783669298,
      "map_3_norm,none": 0.4498245614035095,
      "map_3_norm_stderr,none": 0.016653520145160968,
      "map_4_norm,none": 0.5150877192982464,
      "map_4_norm_stderr,none": 0.01337558709563313,
      "alias": "fp2-1.0-0.6"
    },
    "cpa_audit-1.0-0.6": {
      "acc,none": 0.1306532663316583,
      "acc_stderr,none": 0.016914586905916507,
      "acc_norm,none": 0.1306532663316583,
      "acc_norm_stderr,none": 0.016914586905916507,
      "map,none": 0.37981574539363455,
      "map_stderr,none": 0.013461955882259376,
      "map_2,none": 0.21231155778894473,
      "map_2_stderr,none": 0.018020333973958504,
      "map_3,none": 0.2684254606365157,
      "map_3_stderr,none": 0.017432661464632303,
      "map_4,none": 0.31365159128978193,
      "map_4_stderr,none": 0.016311577466630013,
      "map_norm,none": 0.37981574539363455,
      "map_norm_stderr,none": 0.013461955882259376,
      "map_2_norm,none": 0.21231155778894473,
      "map_2_norm_stderr,none": 0.018020333973958504,
      "map_3_norm,none": 0.2684254606365157,
      "map_3_norm_stderr,none": 0.017432661464632303,
      "map_4_norm,none": 0.31365159128978193,
      "map_4_norm_stderr,none": 0.016311577466630013,
      "alias": "cpa_audit-1.0-0.6"
    },
    "cma_basics-1.0-0.6": {
      "acc,none": 0.2894736842105263,
      "acc_stderr,none": 0.07455791696866065,
      "acc_norm,none": 0.23684210526315788,
      "acc_norm_stderr,none": 0.0698933400604233,
      "map,none": 0.5526315789473685,
      "map_stderr,none": 0.04883471539556382,
      "map_2,none": 0.40789473684210525,
      "map_2_stderr,none": 0.07019395796413648,
      "map_3,none": 0.5131578947368421,
      "map_3_stderr,none": 0.0570540059217991,
      "map_4,none": 0.5526315789473685,
      "map_4_stderr,none": 0.04883471539556382,
      "map_norm,none": 0.5394736842105263,
      "map_norm_stderr,none": 0.04475148283567389,
      "map_2_norm,none": 0.42105263157894735,
      "map_2_norm_stderr,none": 0.06402323266269026,
      "map_3_norm,none": 0.5,
      "map_3_norm_stderr,none": 0.053338074706266496,
      "map_4_norm,none": 0.5394736842105263,
      "map_4_norm_stderr,none": 0.04475148283567389,
      "alias": "cma_basics-1.0-0.6"
    },
    "chabsa-1.0-0.6": {
      "acc,none": 0.6228149682765765,
      "acc_stderr,none": 0.005515588367859367,
      "f1,none": 0.515810113354894,
      "f1_stderr,none": "N/A",
      "acc_norm,none": 0.6228149682765765,
      "acc_norm_stderr,none": 0.005515588367859367,
      "f1_norm,none": 0.515810113354894,
      "f1_norm_stderr,none": "N/A",
      "alias": "chabsa-1.0-0.6"
    }
  },
  "group_subtasks": {
    "chabsa-1.0-0.6": [],
    "cma_basics-1.0-0.6": [],
    "cpa_audit-1.0-0.6": [],
    "fp2-1.0-0.6": [],
    "security_sales_1-1.0-0.6": []
  },
  "configs": {
    "chabsa-1.0-0.6": {
      "task": "chabsa-1.0-0.6",
      "dataset_path": "jlm_fin_eval/datasets/chabsa/chabsa.py",
      "dataset_name": "chABSA",
      "test_split": "test",
      "doc_to_text": "与えられたセンテンスにおける、ターゲットのセンチメントをpositiveかnegativeで答えてください。\n\nセンテンス: {{sentence}}\nターゲット: {{target}} [/INST]",
      "doc_to_target": "{{polarity}}",
      "doc_to_choice": [
        "positive",
        "negative"
      ],
      "description": "<s>[INST] <<SYS>>\nYou are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.\n<</SYS>>\n\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": " </s><s>[INST] ",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1",
          "aggregation": "2class_adjusted_macro_f1_score_for_chabsa",
          "higher_is_better": true
        },
        {
          "metric": "f1_norm",
          "aggregation": "2class_adjusted_macro_f1_score_for_chabsa",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "cma_basics-1.0-0.6": {
      "task": "cma_basics-1.0-0.6",
      "dataset_path": "jlm_fin_eval/datasets/cma_basics/cma_basics.py",
      "dataset_name": "cma_basics",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_06(doc):\n    INSTRUCTION = \"与えられた選択肢の中から、最適な答えを選んでください。\"\n    q_doc_text = doc[\"question\"]\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += \"\\n\" + doc[\"context\"]\n    choices = \"\\n\".join([f\"- {choice}\" for choice in doc[\"choices\"][\"text\"]])\n    input_text = f\"質問：{q_doc_text}\" + f\"出力は以下から選択してください：\\n{choices}\"\n    return f\"{INSTRUCTION}\\n\\n{input_text} [/INST] \"\n",
      "doc_to_target": "def doc_to_target_01(doc):\n    return [\n        choice_text\n        for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"])\n        if choice_id == doc[\"answer\"]\n    ][0]\n",
      "doc_to_choice": "def doc_to_choices_01(doc):\n    choices = doc[\"choices\"][\"text\"]\n    return choices\n",
      "description": "<s>[INST] <<SYS>>\nYou are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.\n<</SYS>>\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": " </s><s>[INST] ",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "cpa_audit-1.0-0.6": {
      "task": "cpa_audit-1.0-0.6",
      "dataset_path": "jlm_fin_eval/datasets/cpa/cpa_audit.py",
      "dataset_name": "cpa_audit",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_06(doc):\n    INSTRUCTION = \"与えられた答えの組み合わせの選択肢の中から、最適な選択肢を選んでください。\"\n    q_doc_text = doc[\"question\"]\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += \"\\n\" + doc[\"context\"]\n    choices = \"\\n\".join([f\"- {choice}\" for choice in doc[\"choices\"][\"text\"]])\n    input_text = f\"質問：{q_doc_text}\" + f\"出力は以下から選択してください：\\n{choices}\"\n    return f\"{INSTRUCTION}\\n\\n{input_text} [/INST] \"\n",
      "doc_to_target": "def doc_to_target_01(doc):\n    return [\n        choice_text\n        for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"])\n        if choice_id == doc[\"answer\"]\n    ][0]\n",
      "doc_to_choice": "def doc_to_choices_01(doc):\n    choices = doc[\"choices\"][\"text\"]\n    return choices\n",
      "description": "<s>[INST] <<SYS>>\nYou are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.\n<</SYS>>\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": " </s><s>[INST] ",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "fp2-1.0-0.6": {
      "task": "fp2-1.0-0.6",
      "dataset_path": "jlm_fin_eval/datasets/fp2/fp2.py",
      "dataset_name": "fp2",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_06(doc):\n    INSTRUCTION = \"与えられた選択肢の中から、最適な答えを選んでください。\"\n    q_doc_text = doc[\"question\"]\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += \"\\n\" + doc[\"context\"]\n    input_text = f\"質問：{q_doc_text}\"\n    return f\"{INSTRUCTION}\\n\\n{input_text} [/INST] \"\n",
      "doc_to_target": "def doc_to_target_00(doc):\n    answer = doc[\"choices\"][\"text\"][doc[\"choices\"][\"id\"].index(doc[\"answer\"])]\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_00(doc):\n    choices = [choice for choice in doc[\"choices\"][\"text\"]]\n    return choices\n",
      "description": "<s>[INST] <<SYS>>\nYou are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.\n<</SYS>>\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": " </s><s>[INST] ",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "security_sales_1-1.0-0.6": {
      "task": "security_sales_1-1.0-0.6",
      "dataset_path": "jlm_fin_eval/datasets/security_sales_1/security_sales_1.py",
      "dataset_name": "security_sales_1",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_06(doc):\n    INSTRUCTION = \"与えられた選択肢の中から、最適な答えを選んでください。\"\n    q_doc_text = doc[\"question\"]\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += \"\\n\" + doc[\"context\"]\n    choices = \"\\n\".join([f\"- {choice}\" for choice in doc[\"choices\"][\"text\"]])\n    input_text = f\"質問：{q_doc_text}\" + f\"出力は以下から選択してください：\\n{choices}\"\n    return f\"{INSTRUCTION}\\n\\n{input_text} [/INST] \"\n",
      "doc_to_target": "def doc_to_target_01(doc):\n    return [\n        choice_text\n        for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"])\n        if choice_id == doc[\"answer\"]\n    ][0]\n",
      "doc_to_choice": "def doc_to_choices_01(doc):\n    choices = doc[\"choices\"][\"text\"]\n    return choices\n",
      "description": "<s>[INST] <<SYS>>\nYou are a helpful, respectful and honest assistant. Always answer as helpfully as possible, while being safe. Your answers should not include any harmful, unethical, racist, sexist, toxic, dangerous, or illegal content. Please ensure that your responses are socially unbiased and positive in nature.\n\nIf a question does not make any sense, or is not factually coherent, explain why instead of answering something not correct. If you don't know the answer to a question, please don't share false information.\n<</SYS>>\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": " </s><s>[INST] ",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "chabsa-1.0-0.6": 1.0,
    "cma_basics-1.0-0.6": 1.0,
    "cpa_audit-1.0-0.6": 1.0,
    "fp2-1.0-0.6": 1.0,
    "security_sales_1-1.0-0.6": 1.0
  },
  "n-shot": {
    "chabsa-1.0-0.6": 0,
    "cma_basics-1.0-0.6": 0,
    "cpa_audit-1.0-0.6": 0,
    "fp2-1.0-0.6": 0,
    "security_sales_1-1.0-0.6": 0
  },
  "config": {
    "model": "vllm",
    "model_args": "pretrained=stabilityai/japanese-stablelm-3b-4e1t-instruct,trust_remote_code=True,dtype=bfloat16",
    "batch_size": 1,
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null
  },
  "git_hash": "7817456",
  "date": 1714415934.4652195,
  "pretty_env_info": "'NoneType' object has no attribute 'splitlines'",
  "transformers_version": "4.40.1",
  "upper_git_hash": null
}