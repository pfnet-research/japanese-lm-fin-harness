{
  "results": {
    "security_sales_1": {
      "acc,none": 0.42105263157894735,
      "acc_stderr,none": 0.06597717584505354,
      "acc_norm,none": 0.42105263157894735,
      "acc_norm_stderr,none": 0.06597717584505354,
      "map,none": 0.6681286549707601,
      "map_stderr,none": 0.039329348730519686,
      "map_2,none": 0.6140350877192983,
      "map_2_stderr,none": 0.050090056522990346,
      "map_3,none": 0.6374269005847952,
      "map_3_stderr,none": 0.046103160144078364,
      "map_4,none": 0.6681286549707601,
      "map_4_stderr,none": 0.039329348730519686,
      "map_norm,none": 0.6681286549707601,
      "map_norm_stderr,none": 0.039329348730519686,
      "map_2_norm,none": 0.6140350877192983,
      "map_2_norm_stderr,none": 0.050090056522990346,
      "map_3_norm,none": 0.6374269005847952,
      "map_3_norm_stderr,none": 0.046103160144078364,
      "map_4_norm,none": 0.6681286549707601,
      "map_4_norm_stderr,none": 0.039329348730519686,
      "alias": "security_sales_1"
    },
    "fp2": {
      "acc,none": 0.24,
      "acc_stderr,none": 0.019616577850947305,
      "acc_norm,none": 0.24,
      "acc_norm_stderr,none": 0.019616577850947305,
      "map,none": 0.5105263157894746,
      "map_stderr,none": 0.013278373585193553,
      "map_2,none": 0.3568421052631579,
      "map_2_stderr,none": 0.01899837682067974,
      "map_3,none": 0.4452631578947377,
      "map_3_stderr,none": 0.016537609423700483,
      "map_4,none": 0.5105263157894746,
      "map_4_stderr,none": 0.013278373585193553,
      "map_norm,none": 0.5105263157894746,
      "map_norm_stderr,none": 0.013278373585193553,
      "map_2_norm,none": 0.3568421052631579,
      "map_2_norm_stderr,none": 0.01899837682067974,
      "map_3_norm,none": 0.4452631578947377,
      "map_3_norm_stderr,none": 0.016537609423700483,
      "map_4_norm,none": 0.5105263157894746,
      "map_4_norm_stderr,none": 0.013278373585193553,
      "alias": "fp2"
    },
    "cpa_audit": {
      "acc,none": 0.13819095477386933,
      "acc_stderr,none": 0.01732008740419801,
      "acc_norm,none": 0.13819095477386933,
      "acc_norm_stderr,none": 0.01732008740419801,
      "map,none": 0.3840452261306529,
      "map_stderr,none": 0.013502899593416643,
      "map_2,none": 0.21733668341708542,
      "map_2_stderr,none": 0.01813249481187341,
      "map_3,none": 0.27177554438860957,
      "map_3_stderr,none": 0.017533570503613677,
      "map_4,none": 0.32014237855946376,
      "map_4_stderr,none": 0.016302452418544586,
      "map_norm,none": 0.3840452261306529,
      "map_norm_stderr,none": 0.013502899593416643,
      "map_2_norm,none": 0.21733668341708542,
      "map_2_norm_stderr,none": 0.01813249481187341,
      "map_3_norm,none": 0.27177554438860957,
      "map_3_norm_stderr,none": 0.017533570503613677,
      "map_4_norm,none": 0.32014237855946376,
      "map_4_norm_stderr,none": 0.016302452418544586,
      "alias": "cpa_audit"
    },
    "cma_basics": {
      "acc,none": 0.2631578947368421,
      "acc_stderr,none": 0.0723926637268818,
      "acc_norm,none": 0.2631578947368421,
      "acc_norm_stderr,none": 0.0723926637268818,
      "map,none": 0.5504385964912281,
      "map_stderr,none": 0.04667499266182624,
      "map_2,none": 0.4342105263157895,
      "map_2_stderr,none": 0.06578947368421051,
      "map_3,none": 0.5043859649122807,
      "map_3_stderr,none": 0.05639408196651929,
      "map_4,none": 0.5504385964912281,
      "map_4_stderr,none": 0.04667499266182624,
      "map_norm,none": 0.5504385964912281,
      "map_norm_stderr,none": 0.04667499266182624,
      "map_2_norm,none": 0.4342105263157895,
      "map_2_norm_stderr,none": 0.06578947368421051,
      "map_3_norm,none": 0.5043859649122807,
      "map_3_norm_stderr,none": 0.05639408196651929,
      "map_4_norm,none": 0.5504385964912281,
      "map_4_norm_stderr,none": 0.04667499266182624,
      "alias": "cma_basics"
    },
    "chabsa": {
      "acc,none": 0.4607017998187233,
      "acc_stderr,none": 0.005672304561589714,
      "f1,none": 0.44882520860781727,
      "f1_stderr,none": "N/A",
      "acc_norm,none": 0.4607017998187233,
      "acc_norm_stderr,none": 0.005672304561589714,
      "f1_norm,none": 0.44882520860781727,
      "f1_norm_stderr,none": "N/A",
      "alias": "chabsa"
    }
  },
  "group_subtasks": {
    "chabsa": [],
    "cma_basics": [],
    "cpa_audit": [],
    "fp2": [],
    "security_sales_1": []
  },
  "configs": {
    "chabsa": {
      "task": "chabsa",
      "dataset_path": "jlm_fin_eval/datasets/chabsa/chabsa.py",
      "dataset_name": "chABSA",
      "test_split": "test",
      "doc_to_text": "センテンス: {{sentence}}\nターゲット: {{target}}\n回答:",
      "doc_to_target": "{{polarity}}",
      "doc_to_choice": [
        "positive",
        "negative"
      ],
      "description": "以下のセンテンスにおける、ターゲットのセンチメントをpositiveかnegativeで答えてください。\n\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1",
          "aggregation": "2class_adjusted_macro_f1_score_for_chabsa",
          "higher_is_better": true
        },
        {
          "metric": "f1_norm",
          "aggregation": "2class_adjusted_macro_f1_score_for_chabsa",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "cma_basics": {
      "task": "cma_basics",
      "dataset_path": "jlm_fin_eval/datasets/cma_basics/cma_basics.py",
      "dataset_name": "cma_basics",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_00(doc):\n    doc_text = \"【問題】\\n\" + doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        doc_text += doc[\"context\"] + \"\\n\"\n    doc_text += \"\\n【選択肢】\\n\"\n    for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"]):\n        doc_text += chr(choice_id + 65) + \": \" + choice_text + \"\\n\"\n    doc_text += \"\\n【答え】\\n\"\n    # doc_text += chr(int(doc[\"answer\"]) + 65)\n    return doc_text\n",
      "doc_to_target": "def doc_to_target_alphabet(doc):\n    answer = chr(int(doc[\"answer\"]) + 65)\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_alphabet(doc):\n    choices = [chr(choice_id + 65) for choice_id in doc[\"choices\"][\"id\"]]\n    return choices\n",
      "description": "以下の問題の適切な答えを選択肢から選んでアルファベットで答えなさい。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "cpa_audit": {
      "task": "cpa_audit",
      "dataset_path": "jlm_fin_eval/datasets/cpa/cpa_audit.py",
      "dataset_name": "cpa_audit",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_00(doc):\n    doc_text = \"【問題】\\n\" + doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        doc_text += doc[\"context\"] + \"\\n\"\n    doc_text += \"\\n【選択肢】\\n\"\n    for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"]):\n        doc_text += chr(choice_id + 65) + \": \" + choice_text + \"\\n\"\n    doc_text += \"\\n【答え】\\n\"\n    # doc_text += chr(int(doc[\"answer\"]) + 65)\n    return doc_text\n",
      "doc_to_target": "def doc_to_target_alphabet(doc):\n    answer = chr(int(doc[\"answer\"]) + 65)\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_alphabet(doc):\n    choices = [chr(choice_id + 65) for choice_id in doc[\"choices\"][\"id\"]]\n    return choices\n",
      "description": "以下の問題の答えとして適切な記号の組み合わせを選択肢から選んでアルファベットで答えなさい。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "fp2": {
      "task": "fp2",
      "dataset_path": "jlm_fin_eval/datasets/fp2/fp2.py",
      "dataset_name": "fp2",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_00(doc):\n    doc_text = \"【問題】\\n\" + doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        doc_text += doc[\"context\"] + \"\\n\"\n    doc_text += \"\\n【答え】\\n\"\n    # doc_text += chr(int(doc[\"answer\"]) + 65)\n    return doc_text\n",
      "doc_to_target": "def doc_to_target_00(doc):\n    answer = doc[\"choices\"][\"text\"][doc[\"choices\"][\"id\"].index(doc[\"answer\"])]\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_00(doc):\n    choices = [choice for choice in doc[\"choices\"][\"text\"]]\n    return choices\n",
      "description": "以下の問題の適切な答えを選択肢から選んで１～４の数字で答えなさい。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "security_sales_1": {
      "task": "security_sales_1",
      "dataset_path": "jlm_fin_eval/datasets/security_sales_1/security_sales_1.py",
      "dataset_name": "security_sales_1",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_00(doc):\n    doc_text = \"【問題】\\n\" + doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        doc_text += doc[\"context\"] + \"\\n\"\n    doc_text += \"\\n【選択肢】\\n\"\n    for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"]):\n        doc_text += chr(choice_id + 65) + \": \" + choice_text + \"\\n\"\n    doc_text += \"\\n【答え】\\n\"\n    # doc_text += chr(int(doc[\"answer\"]) + 65)\n    return doc_text\n",
      "doc_to_target": "def doc_to_target_alphabet(doc):\n    answer = chr(int(doc[\"answer\"]) + 65)\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_alphabet(doc):\n    choices = [chr(choice_id + 65) for choice_id in doc[\"choices\"][\"id\"]]\n    return choices\n",
      "description": "以下の問題の適切な答えを選択肢から選んでアルファベットで答えなさい。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "chabsa": 1.0,
    "cma_basics": 1.0,
    "cpa_audit": 1.0,
    "fp2": 1.0,
    "security_sales_1": 1.0
  },
  "n-shot": {
    "chabsa": 0,
    "cma_basics": 0,
    "cpa_audit": 0,
    "fp2": 0,
    "security_sales_1": 0
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=cyberagent/open-calm-large,dtype=float16",
    "batch_size": 1,
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null
  },
  "git_hash": "45fae5d",
  "date": 1714406329.332347,
  "pretty_env_info": "'NoneType' object has no attribute 'splitlines'",
  "transformers_version": "4.40.1",
  "upper_git_hash": null
}