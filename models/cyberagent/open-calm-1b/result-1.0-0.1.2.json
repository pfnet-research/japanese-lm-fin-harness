{
  "results": {
    "security_sales_1-1.0-0.1.2": {
      "acc,none": 0.3684210526315789,
      "acc_stderr,none": 0.06446025638903097,
      "acc_norm,none": 0.3684210526315789,
      "acc_norm_stderr,none": 0.06446025638903097,
      "map,none": 0.6330409356725145,
      "map_stderr,none": 0.03771229527059313,
      "map_2,none": 0.5789473684210527,
      "map_2_stderr,none": 0.048131558050397566,
      "map_3,none": 0.6023391812865496,
      "map_3_stderr,none": 0.04429952078585715,
      "map_4,none": 0.6330409356725145,
      "map_4_stderr,none": 0.03771229527059313,
      "map_norm,none": 0.6330409356725145,
      "map_norm_stderr,none": 0.03771229527059313,
      "map_2_norm,none": 0.5789473684210527,
      "map_2_norm_stderr,none": 0.048131558050397566,
      "map_3_norm,none": 0.6023391812865496,
      "map_3_norm_stderr,none": 0.04429952078585715,
      "map_4_norm,none": 0.6330409356725145,
      "map_4_norm_stderr,none": 0.03771229527059313,
      "alias": "security_sales_1-1.0-0.1.2"
    },
    "fp2-1.0-0.1.2": {
      "acc,none": 0.23789473684210527,
      "acc_stderr,none": 0.019557382357921746,
      "acc_norm,none": 0.23789473684210527,
      "acc_norm_stderr,none": 0.019557382357921746,
      "map,none": 0.5059649122807028,
      "map_stderr,none": 0.012842833961285603,
      "map_2,none": 0.3526315789473684,
      "map_2_stderr,none": 0.01857506758545442,
      "map_3,none": 0.44807017543859734,
      "map_3_stderr,none": 0.015840763538954174,
      "map_4,none": 0.5059649122807028,
      "map_4_stderr,none": 0.012842833961285603,
      "map_norm,none": 0.5059649122807028,
      "map_norm_stderr,none": 0.012842833961285603,
      "map_2_norm,none": 0.3526315789473684,
      "map_2_norm_stderr,none": 0.01857506758545442,
      "map_3_norm,none": 0.44807017543859734,
      "map_3_norm_stderr,none": 0.015840763538954174,
      "map_4_norm,none": 0.5059649122807028,
      "map_4_norm_stderr,none": 0.012842833961285603,
      "alias": "fp2-1.0-0.1.2"
    },
    "cpa_audit-1.0-0.1.2": {
      "acc,none": 0.13819095477386933,
      "acc_stderr,none": 0.01732008740419801,
      "acc_norm,none": 0.13819095477386933,
      "acc_norm_stderr,none": 0.01732008740419801,
      "map,none": 0.3891122278056952,
      "map_stderr,none": 0.01345620073997622,
      "map_2,none": 0.2236180904522613,
      "map_2_stderr,none": 0.01815823759435009,
      "map_3,none": 0.28308207705192606,
      "map_3_stderr,none": 0.01742854350756054,
      "map_4,none": 0.3295644891122275,
      "map_4_stderr,none": 0.016164589686260795,
      "map_norm,none": 0.3891122278056952,
      "map_norm_stderr,none": 0.01345620073997622,
      "map_2_norm,none": 0.2236180904522613,
      "map_2_norm_stderr,none": 0.01815823759435009,
      "map_3_norm,none": 0.28308207705192606,
      "map_3_norm_stderr,none": 0.01742854350756054,
      "map_4_norm,none": 0.3295644891122275,
      "map_4_norm_stderr,none": 0.016164589686260795,
      "alias": "cpa_audit-1.0-0.1.2"
    },
    "cma_basics-1.0-0.1.2": {
      "acc,none": 0.2631578947368421,
      "acc_stderr,none": 0.0723926637268818,
      "acc_norm,none": 0.2631578947368421,
      "acc_norm_stderr,none": 0.0723926637268818,
      "map,none": 0.4868421052631579,
      "map_stderr,none": 0.04614145062304134,
      "map_2,none": 0.32894736842105265,
      "map_2_stderr,none": 0.0660733562268826,
      "map_3,none": 0.4078947368421053,
      "map_3_stderr,none": 0.05920064719228436,
      "map_4,none": 0.4868421052631579,
      "map_4_stderr,none": 0.04614145062304134,
      "map_norm,none": 0.4868421052631579,
      "map_norm_stderr,none": 0.04614145062304134,
      "map_2_norm,none": 0.32894736842105265,
      "map_2_norm_stderr,none": 0.0660733562268826,
      "map_3_norm,none": 0.4078947368421053,
      "map_3_norm_stderr,none": 0.05920064719228436,
      "map_4_norm,none": 0.4868421052631579,
      "map_4_norm_stderr,none": 0.04614145062304134,
      "alias": "cma_basics-1.0-0.1.2"
    },
    "chabsa-1.0-0.1": {
      "acc,none": 0.4024342871940956,
      "acc_stderr,none": 0.005580529705635658,
      "f1,none": 0.3008454703198531,
      "f1_stderr,none": "N/A",
      "acc_norm,none": 0.4024342871940956,
      "acc_norm_stderr,none": 0.005580529705635658,
      "f1_norm,none": 0.3008454703198531,
      "f1_norm_stderr,none": "N/A",
      "alias": "chabsa-1.0-0.1"
    }
  },
  "group_subtasks": {
    "chabsa-1.0-0.1": [],
    "cma_basics-1.0-0.1.2": [],
    "cpa_audit-1.0-0.1.2": [],
    "fp2-1.0-0.1.2": [],
    "security_sales_1-1.0-0.1.2": []
  },
  "configs": {
    "chabsa-1.0-0.1": {
      "task": "chabsa-1.0-0.1",
      "dataset_path": "jlm_fin_eval/datasets/chabsa/chabsa.py",
      "dataset_name": "chABSA",
      "test_split": "test",
      "doc_to_text": "[センテンス]: {{sentence}}\nターゲット]: {{target}}\n[答え]:",
      "doc_to_target": "{{polarity}}",
      "doc_to_choice": [
        "positive",
        "negative"
      ],
      "description": "[センテンス]における、[ターゲット]のセンチメントをpositiveかnegativeで選んでください。\n\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1",
          "aggregation": "2class_adjusted_macro_f1_score_for_chabsa",
          "higher_is_better": true
        },
        {
          "metric": "f1_norm",
          "aggregation": "2class_adjusted_macro_f1_score_for_chabsa",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "cma_basics-1.0-0.1.2": {
      "task": "cma_basics-1.0-0.1.2",
      "dataset_path": "jlm_fin_eval/datasets/cma_basics/cma_basics.py",
      "dataset_name": "cma_basics",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_01_2(doc):\n    q_doc_text = doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += doc[\"context\"] + \"\\n\"\n    choice_doc_text = []\n    for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"]):\n        choice_doc_text.append(chr(choice_id + 65) + \":\" + choice_text)\n    return f\"[問題]:{q_doc_text}[選択肢]:[{', '.join(choice_doc_text)}]\\n[答え]:\"\n",
      "doc_to_target": "def doc_to_target_alphabet(doc):\n    answer = chr(int(doc[\"answer\"]) + 65)\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_alphabet(doc):\n    choices = [chr(choice_id + 65) for choice_id in doc[\"choices\"][\"id\"]]\n    return choices\n",
      "description": "[問題]に対する[答え]を[選択肢]の中からアルファベットで選んでください。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "cpa_audit-1.0-0.1.2": {
      "task": "cpa_audit-1.0-0.1.2",
      "dataset_path": "jlm_fin_eval/datasets/cpa/cpa_audit.py",
      "dataset_name": "cpa_audit",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_01_2(doc):\n    q_doc_text = doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += doc[\"context\"] + \"\\n\"\n    choice_doc_text = []\n    for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"]):\n        choice_doc_text.append(chr(choice_id + 65) + \":\" + choice_text)\n    return f\"[問題]:{q_doc_text}[選択肢]:[{', '.join(choice_doc_text)}]\\n[答え]:\"\n",
      "doc_to_target": "def doc_to_target_alphabet(doc):\n    answer = chr(int(doc[\"answer\"]) + 65)\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_alphabet(doc):\n    choices = [chr(choice_id + 65) for choice_id in doc[\"choices\"][\"id\"]]\n    return choices\n",
      "description": "[問題]に対する[答え]として適切な記号の組み合わせを[選択肢]の中からアルファベットで選んでください。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "fp2-1.0-0.1.2": {
      "task": "fp2-1.0-0.1.2",
      "dataset_path": "jlm_fin_eval/datasets/fp2/fp2.py",
      "dataset_name": "fp2",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_01_2(doc):\n    q_doc_text = doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += doc[\"context\"] + \"\\n\"\n    choice_doc_text = []\n    for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"]):\n        choice_doc_text.append(chr(choice_id + 65) + \":\" + choice_text)\n    return f\"[問題]:{q_doc_text}[選択肢]:[{', '.join(choice_doc_text)}]\\n[答え]:\"\n",
      "doc_to_target": "def doc_to_target_01_2(doc):\n    answer = chr(doc[\"choices\"][\"id\"].index(doc[\"answer\"]) + 65)\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_01_2(doc):\n    choices = [chr(i + 65) for i, _ in enumerate(doc[\"choices\"][\"id\"])]\n    return choices\n",
      "description": "[問題]に対する[答え]を[選択肢]の中からアルファベットで選んでください。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "security_sales_1-1.0-0.1.2": {
      "task": "security_sales_1-1.0-0.1.2",
      "dataset_path": "jlm_fin_eval/datasets/security_sales_1/security_sales_1.py",
      "dataset_name": "security_sales_1",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_01_2(doc):\n    q_doc_text = doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += doc[\"context\"] + \"\\n\"\n    choice_doc_text = []\n    for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"]):\n        choice_doc_text.append(chr(choice_id + 65) + \":\" + choice_text)\n    return f\"[問題]:{q_doc_text}[選択肢]:[{', '.join(choice_doc_text)}]\\n[答え]:\"\n",
      "doc_to_target": "def doc_to_target_alphabet(doc):\n    answer = chr(int(doc[\"answer\"]) + 65)\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_alphabet(doc):\n    choices = [chr(choice_id + 65) for choice_id in doc[\"choices\"][\"id\"]]\n    return choices\n",
      "description": "[問題]に対する[答え]を[選択肢]の中からアルファベットで選んでください。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "chabsa-1.0-0.1": 1.0,
    "cma_basics-1.0-0.1.2": 1.0,
    "cpa_audit-1.0-0.1.2": 1.0,
    "fp2-1.0-0.1.2": 1.0,
    "security_sales_1-1.0-0.1.2": 1.0
  },
  "n-shot": {
    "chabsa-1.0-0.1": 0,
    "cma_basics-1.0-0.1.2": 0,
    "cpa_audit-1.0-0.1.2": 0,
    "fp2-1.0-0.1.2": 0,
    "security_sales_1-1.0-0.1.2": 0
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=cyberagent/open-calm-1b,dtype=float16",
    "batch_size": 1,
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null
  },
  "git_hash": "45fae5d",
  "date": 1714401699.0339441,
  "pretty_env_info": "'NoneType' object has no attribute 'splitlines'",
  "transformers_version": "4.40.1",
  "upper_git_hash": null
}