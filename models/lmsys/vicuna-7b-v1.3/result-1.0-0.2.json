{
  "results": {
    "security_sales_1-1.0-0.2": {
      "acc,none": 0.43859649122807015,
      "acc_stderr,none": 0.0663095566682855,
      "acc_norm,none": 0.43859649122807015,
      "acc_norm_stderr,none": 0.0663095566682855,
      "map,none": 0.6871345029239767,
      "map_stderr,none": 0.038308756659409214,
      "map_2,none": 0.6491228070175439,
      "map_2_stderr,none": 0.04677057044240984,
      "map_3,none": 0.6608187134502925,
      "map_3_stderr,none": 0.044536684829613496,
      "map_4,none": 0.6871345029239767,
      "map_4_stderr,none": 0.038308756659409214,
      "map_norm,none": 0.6871345029239767,
      "map_norm_stderr,none": 0.038308756659409214,
      "map_2_norm,none": 0.6491228070175439,
      "map_2_norm_stderr,none": 0.04677057044240984,
      "map_3_norm,none": 0.6608187134502925,
      "map_3_norm_stderr,none": 0.044536684829613496,
      "map_4_norm,none": 0.6871345029239767,
      "map_4_norm_stderr,none": 0.038308756659409214,
      "alias": "security_sales_1-1.0-0.2"
    },
    "fp2-1.0-0.2": {
      "acc,none": 0.25263157894736843,
      "acc_stderr,none": 0.019958229813034273,
      "acc_norm,none": 0.25263157894736843,
      "acc_norm_stderr,none": 0.019958229813034273,
      "map,none": 0.5215789473684221,
      "map_stderr,none": 0.013344096664335768,
      "map_2,none": 0.3736842105263158,
      "map_2_stderr,none": 0.019074878765491063,
      "map_3,none": 0.4621052631578956,
      "map_3_stderr,none": 0.01643537870785008,
      "map_4,none": 0.5215789473684221,
      "map_4_stderr,none": 0.013344096664335768,
      "map_norm,none": 0.5215789473684221,
      "map_norm_stderr,none": 0.013344096664335768,
      "map_2_norm,none": 0.3736842105263158,
      "map_2_norm_stderr,none": 0.019074878765491063,
      "map_3_norm,none": 0.4621052631578956,
      "map_3_norm_stderr,none": 0.01643537870785008,
      "map_4_norm,none": 0.5215789473684221,
      "map_4_norm_stderr,none": 0.013344096664335768,
      "alias": "fp2-1.0-0.2"
    },
    "cpa_audit-1.0-0.2": {
      "acc,none": 0.17587939698492464,
      "acc_stderr,none": 0.019107664906766554,
      "acc_norm,none": 0.17587939698492464,
      "acc_norm_stderr,none": 0.019107664906766554,
      "map,none": 0.4179229480737018,
      "map_stderr,none": 0.014574554348090196,
      "map_2,none": 0.26256281407035176,
      "map_2_stderr,none": 0.019456201163526456,
      "map_3,none": 0.32118927973199296,
      "map_3_stderr,none": 0.018481436484825548,
      "map_4,none": 0.3563651591289781,
      "map_4_stderr,none": 0.017426427132679938,
      "map_norm,none": 0.4179229480737018,
      "map_norm_stderr,none": 0.014574554348090196,
      "map_2_norm,none": 0.26256281407035176,
      "map_2_norm_stderr,none": 0.019456201163526456,
      "map_3_norm,none": 0.32118927973199296,
      "map_3_norm_stderr,none": 0.018481436484825548,
      "map_4_norm,none": 0.3563651591289781,
      "map_4_norm_stderr,none": 0.017426427132679938,
      "alias": "cpa_audit-1.0-0.2"
    },
    "cma_basics-1.0-0.2": {
      "acc,none": 0.21052631578947367,
      "acc_stderr,none": 0.06702258315442243,
      "acc_norm,none": 0.21052631578947367,
      "acc_norm_stderr,none": 0.06702258315442243,
      "map,none": 0.5109649122807017,
      "map_stderr,none": 0.044132920608548495,
      "map_2,none": 0.3684210526315789,
      "map_2_stderr,none": 0.06446025638903102,
      "map_3,none": 0.46491228070175444,
      "map_3_stderr,none": 0.053396527408416564,
      "map_4,none": 0.5109649122807017,
      "map_4_stderr,none": 0.044132920608548495,
      "map_norm,none": 0.5109649122807017,
      "map_norm_stderr,none": 0.044132920608548495,
      "map_2_norm,none": 0.3684210526315789,
      "map_2_norm_stderr,none": 0.06446025638903102,
      "map_3_norm,none": 0.46491228070175444,
      "map_3_norm_stderr,none": 0.053396527408416564,
      "map_4_norm,none": 0.5109649122807017,
      "map_4_norm_stderr,none": 0.044132920608548495,
      "alias": "cma_basics-1.0-0.2"
    },
    "chabsa-1.0-0.2": {
      "acc,none": 0.7385730933575035,
      "acc_stderr,none": 0.005000425766977295,
      "f1,none": 0.733360724347407,
      "f1_stderr,none": "N/A",
      "acc_norm,none": 0.7385730933575035,
      "acc_norm_stderr,none": 0.005000425766977295,
      "f1_norm,none": 0.733360724347407,
      "f1_norm_stderr,none": "N/A",
      "alias": "chabsa-1.0-0.2"
    }
  },
  "group_subtasks": {
    "chabsa-1.0-0.2": [],
    "cma_basics-1.0-0.2": [],
    "cpa_audit-1.0-0.2": [],
    "fp2-1.0-0.2": [],
    "security_sales_1-1.0-0.2": []
  },
  "configs": {
    "chabsa-1.0-0.2": {
      "task": "chabsa-1.0-0.2",
      "dataset_path": "jlm_fin_eval/datasets/chabsa/chabsa.py",
      "dataset_name": "chABSA",
      "test_split": "test",
      "doc_to_text": "センテンス: {{sentence}}\nターゲット: {{target}}\n回答:",
      "doc_to_target": "{{polarity}}",
      "doc_to_choice": [
        "positive",
        "negative"
      ],
      "description": "センテンスとターゲットを入力として受け取り、ターゲットに関するセンチメントをpositiveかnegativeから選択してください。\n\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1",
          "aggregation": "2class_adjusted_macro_f1_score_for_chabsa",
          "higher_is_better": true
        },
        {
          "metric": "f1_norm",
          "aggregation": "2class_adjusted_macro_f1_score_for_chabsa",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "cma_basics-1.0-0.2": {
      "task": "cma_basics-1.0-0.2",
      "dataset_path": "jlm_fin_eval/datasets/cma_basics/cma_basics.py",
      "dataset_name": "cma_basics",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_02(doc):\n    q_doc_text = doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += doc[\"context\"] + \"\\n\"\n    choices = \",\".join(\n        [\n            f\"{idx}.{choice}\"\n            for idx, choice in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"])\n        ]\n    )\n    return f\"質問:{q_doc_text}\" f\"選択肢:{choices}\\n\" \"回答:\"\n",
      "doc_to_target": "def doc_to_target_02(doc):\n    return [\n        str(choice_id)\n        for choice_id in doc[\"choices\"][\"id\"]\n        if choice_id == doc[\"answer\"]\n    ][0]\n",
      "doc_to_choice": "def doc_to_choices_02(doc):\n    return [str(choice) for choice in doc[\"choices\"][\"id\"]]\n",
      "description": "質問と回答の選択肢を入力として受け取り、選択肢から回答を選択してください。なお、回答は選択肢の番号(例:0)でするものとします。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "cpa_audit-1.0-0.2": {
      "task": "cpa_audit-1.0-0.2",
      "dataset_path": "jlm_fin_eval/datasets/cpa/cpa_audit.py",
      "dataset_name": "cpa_audit",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_02(doc):\n    q_doc_text = doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += doc[\"context\"] + \"\\n\"\n    choices = \",\".join(\n        [\n            f\"{idx}.{choice}\"\n            for idx, choice in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"])\n        ]\n    )\n    return f\"質問:{q_doc_text}\" f\"選択肢:{choices}\\n\" \"回答:\"\n",
      "doc_to_target": "def doc_to_target_02(doc):\n    return [\n        str(choice_id)\n        for choice_id in doc[\"choices\"][\"id\"]\n        if choice_id == doc[\"answer\"]\n    ][0]\n",
      "doc_to_choice": "def doc_to_choices_02(doc):\n    return [str(choice) for choice in doc[\"choices\"][\"id\"]]\n",
      "description": "質問とその答えとして適切な記号の組み合わせの選択肢を入力として受け取り、選択肢から回答を選択してください。なお、回答は選択肢の番号(例:0)でするものとします。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "fp2-1.0-0.2": {
      "task": "fp2-1.0-0.2",
      "dataset_path": "jlm_fin_eval/datasets/fp2/fp2.py",
      "dataset_name": "fp2",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_02(doc):\n    q_doc_text = doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += doc[\"context\"] + \"\\n\"\n    choices = \",\".join(\n        [\n            f\"{idx}.{choice}\"\n            for idx, choice in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"])\n        ]\n    )\n    return f\"質問:{q_doc_text}\" f\"選択肢:{choices}\\n\" \"回答:\"\n",
      "doc_to_target": "def doc_to_target_02(doc):\n    return [\n        str(choice_id)\n        for choice_id in doc[\"choices\"][\"id\"]\n        if choice_id == doc[\"answer\"]\n    ][0]\n",
      "doc_to_choice": "def doc_to_choices_02(doc):\n    return [str(choice) for choice in doc[\"choices\"][\"id\"]]\n",
      "description": "質問と回答の選択肢を入力として受け取り、選択肢から回答を選択してください。なお、回答は選択肢の番号(例:0)でするものとします。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "security_sales_1-1.0-0.2": {
      "task": "security_sales_1-1.0-0.2",
      "dataset_path": "jlm_fin_eval/datasets/security_sales_1/security_sales_1.py",
      "dataset_name": "security_sales_1",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_02(doc):\n    q_doc_text = doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        q_doc_text += doc[\"context\"] + \"\\n\"\n    choices = \",\".join(\n        [\n            f\"{idx}.{choice}\"\n            for idx, choice in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"])\n        ]\n    )\n    return f\"質問:{q_doc_text}\" f\"選択肢:{choices}\\n\" \"回答:\"\n",
      "doc_to_target": "def doc_to_target_02(doc):\n    return [\n        str(choice_id)\n        for choice_id in doc[\"choices\"][\"id\"]\n        if choice_id == doc[\"answer\"]\n    ][0]\n",
      "doc_to_choice": "def doc_to_choices_02(doc):\n    return [str(choice) for choice in doc[\"choices\"][\"id\"]]\n",
      "description": "質問と回答の選択肢を入力として受け取り、選択肢から回答を選択してください。なお、回答は選択肢の番号(例:0)でするものとします。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "chabsa-1.0-0.2": 1.0,
    "cma_basics-1.0-0.2": 1.0,
    "cpa_audit-1.0-0.2": 1.0,
    "fp2-1.0-0.2": 1.0,
    "security_sales_1-1.0-0.2": 1.0
  },
  "n-shot": {
    "chabsa-1.0-0.2": 0,
    "cma_basics-1.0-0.2": 0,
    "cpa_audit-1.0-0.2": 0,
    "fp2-1.0-0.2": 0,
    "security_sales_1-1.0-0.2": 0
  },
  "config": {
    "model": "vllm",
    "model_args": "pretrained=lmsys/vicuna-7b-v1.3,dtype=float16",
    "batch_size": 1,
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null
  },
  "git_hash": "45fae5d",
  "date": 1714401115.5963397,
  "pretty_env_info": "'NoneType' object has no attribute 'splitlines'",
  "transformers_version": "4.40.1",
  "upper_git_hash": null
}