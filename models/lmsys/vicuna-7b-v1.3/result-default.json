{
  "results": {
    "security_sales_1": {
      "acc,none": 0.49122807017543857,
      "acc_stderr,none": 0.06680502724442024,
      "acc_norm,none": 0.49122807017543857,
      "acc_norm_stderr,none": 0.06680502724442024,
      "map,none": 0.7163742690058479,
      "map_stderr,none": 0.03834162133912439,
      "map_2,none": 0.6754385964912281,
      "map_2_stderr,none": 0.04764377408421147,
      "map_3,none": 0.698830409356725,
      "map_3_stderr,none": 0.04283828879110599,
      "map_4,none": 0.7163742690058479,
      "map_4_stderr,none": 0.03834162133912439,
      "map_norm,none": 0.7163742690058479,
      "map_norm_stderr,none": 0.03834162133912439,
      "map_2_norm,none": 0.6754385964912281,
      "map_2_norm_stderr,none": 0.04764377408421147,
      "map_3_norm,none": 0.698830409356725,
      "map_3_norm_stderr,none": 0.04283828879110599,
      "map_4_norm,none": 0.7163742690058479,
      "map_4_norm_stderr,none": 0.03834162133912439,
      "alias": "security_sales_1"
    },
    "fp2": {
      "acc,none": 0.2505263157894737,
      "acc_stderr,none": 0.019902869674481148,
      "acc_norm,none": 0.2505263157894737,
      "acc_norm_stderr,none": 0.019902869674481148,
      "map,none": 0.5238596491228081,
      "map_stderr,none": 0.013281439389789432,
      "map_2,none": 0.37684210526315787,
      "map_2_stderr,none": 0.01903107819299981,
      "map_3,none": 0.4680701754385975,
      "map_3_stderr,none": 0.01623949697031361,
      "map_4,none": 0.5238596491228081,
      "map_4_stderr,none": 0.013281439389789432,
      "map_norm,none": 0.5238596491228081,
      "map_norm_stderr,none": 0.013281439389789432,
      "map_2_norm,none": 0.37684210526315787,
      "map_2_norm_stderr,none": 0.01903107819299981,
      "map_3_norm,none": 0.4680701754385975,
      "map_3_norm_stderr,none": 0.01623949697031361,
      "map_4_norm,none": 0.5238596491228081,
      "map_4_norm_stderr,none": 0.013281439389789432,
      "alias": "fp2"
    },
    "cpa_audit": {
      "acc,none": 0.1306532663316583,
      "acc_stderr,none": 0.016914586905916504,
      "acc_norm,none": 0.1306532663316583,
      "acc_norm_stderr,none": 0.016914586905916504,
      "map,none": 0.38806532663316573,
      "map_stderr,none": 0.013225642292087841,
      "map_2,none": 0.22989949748743718,
      "map_2_stderr,none": 0.017915460793045034,
      "map_3,none": 0.2809882747068675,
      "map_3_stderr,none": 0.017266000412954816,
      "map_4,none": 0.32432998324958096,
      "map_4_stderr,none": 0.016103527111577875,
      "map_norm,none": 0.38806532663316573,
      "map_norm_stderr,none": 0.013225642292087841,
      "map_2_norm,none": 0.22989949748743718,
      "map_2_norm_stderr,none": 0.017915460793045034,
      "map_3_norm,none": 0.2809882747068675,
      "map_3_norm_stderr,none": 0.017266000412954816,
      "map_4_norm,none": 0.32432998324958096,
      "map_4_norm_stderr,none": 0.016103527111577875,
      "alias": "cpa_audit"
    },
    "cma_basics": {
      "acc,none": 0.18421052631578946,
      "acc_stderr,none": 0.06373021861834362,
      "acc_norm,none": 0.18421052631578946,
      "acc_norm_stderr,none": 0.06373021861834362,
      "map,none": 0.5021929824561403,
      "map_stderr,none": 0.04151666242965685,
      "map_2,none": 0.35526315789473684,
      "map_2_stderr,none": 0.06228203739744134,
      "map_3,none": 0.46929824561403516,
      "map_3_stderr,none": 0.048632014445853994,
      "map_4,none": 0.5021929824561403,
      "map_4_stderr,none": 0.04151666242965685,
      "map_norm,none": 0.5021929824561403,
      "map_norm_stderr,none": 0.04151666242965685,
      "map_2_norm,none": 0.35526315789473684,
      "map_2_norm_stderr,none": 0.06228203739744134,
      "map_3_norm,none": 0.46929824561403516,
      "map_3_norm_stderr,none": 0.048632014445853994,
      "map_4_norm,none": 0.5021929824561403,
      "map_4_norm_stderr,none": 0.04151666242965685,
      "alias": "cma_basics"
    },
    "chabsa": {
      "acc,none": 0.7440113945358021,
      "acc_stderr,none": 0.004966325861086238,
      "f1,none": 0.7558609262321276,
      "f1_stderr,none": "N/A",
      "acc_norm,none": 0.7440113945358021,
      "acc_norm_stderr,none": 0.004966325861086238,
      "f1_norm,none": 0.7558609262321276,
      "f1_norm_stderr,none": "N/A",
      "alias": "chabsa"
    }
  },
  "group_subtasks": {
    "chabsa": [],
    "cma_basics": [],
    "cpa_audit": [],
    "fp2": [],
    "security_sales_1": []
  },
  "configs": {
    "chabsa": {
      "task": "chabsa",
      "dataset_path": "jlm_fin_eval/datasets/chabsa/chabsa.py",
      "dataset_name": "chABSA",
      "test_split": "test",
      "doc_to_text": "センテンス: {{sentence}}\nターゲット: {{target}}\n回答:",
      "doc_to_target": "{{polarity}}",
      "doc_to_choice": [
        "positive",
        "negative"
      ],
      "description": "以下のセンテンスにおける、ターゲットのセンチメントをpositiveかnegativeで答えてください。\n\n\n",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1",
          "aggregation": "2class_adjusted_macro_f1_score_for_chabsa",
          "higher_is_better": true
        },
        {
          "metric": "f1_norm",
          "aggregation": "2class_adjusted_macro_f1_score_for_chabsa",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "cma_basics": {
      "task": "cma_basics",
      "dataset_path": "jlm_fin_eval/datasets/cma_basics/cma_basics.py",
      "dataset_name": "cma_basics",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_00(doc):\n    doc_text = \"【問題】\\n\" + doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        doc_text += doc[\"context\"] + \"\\n\"\n    doc_text += \"\\n【選択肢】\\n\"\n    for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"]):\n        doc_text += chr(choice_id + 65) + \": \" + choice_text + \"\\n\"\n    doc_text += \"\\n【答え】\\n\"\n    # doc_text += chr(int(doc[\"answer\"]) + 65)\n    return doc_text\n",
      "doc_to_target": "def doc_to_target_alphabet(doc):\n    answer = chr(int(doc[\"answer\"]) + 65)\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_alphabet(doc):\n    choices = [chr(choice_id + 65) for choice_id in doc[\"choices\"][\"id\"]]\n    return choices\n",
      "description": "以下の問題の適切な答えを選択肢から選んでアルファベットで答えなさい。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "cpa_audit": {
      "task": "cpa_audit",
      "dataset_path": "jlm_fin_eval/datasets/cpa/cpa_audit.py",
      "dataset_name": "cpa_audit",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_00(doc):\n    doc_text = \"【問題】\\n\" + doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        doc_text += doc[\"context\"] + \"\\n\"\n    doc_text += \"\\n【選択肢】\\n\"\n    for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"]):\n        doc_text += chr(choice_id + 65) + \": \" + choice_text + \"\\n\"\n    doc_text += \"\\n【答え】\\n\"\n    # doc_text += chr(int(doc[\"answer\"]) + 65)\n    return doc_text\n",
      "doc_to_target": "def doc_to_target_alphabet(doc):\n    answer = chr(int(doc[\"answer\"]) + 65)\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_alphabet(doc):\n    choices = [chr(choice_id + 65) for choice_id in doc[\"choices\"][\"id\"]]\n    return choices\n",
      "description": "以下の問題の答えとして適切な記号の組み合わせを選択肢から選んでアルファベットで答えなさい。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "fp2": {
      "task": "fp2",
      "dataset_path": "jlm_fin_eval/datasets/fp2/fp2.py",
      "dataset_name": "fp2",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_00(doc):\n    doc_text = \"【問題】\\n\" + doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        doc_text += doc[\"context\"] + \"\\n\"\n    doc_text += \"\\n【答え】\\n\"\n    # doc_text += chr(int(doc[\"answer\"]) + 65)\n    return doc_text\n",
      "doc_to_target": "def doc_to_target_00(doc):\n    answer = doc[\"choices\"][\"text\"][doc[\"choices\"][\"id\"].index(doc[\"answer\"])]\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_00(doc):\n    choices = [choice for choice in doc[\"choices\"][\"text\"]]\n    return choices\n",
      "description": "以下の問題の適切な答えを選択肢から選んで１～４の数字で答えなさい。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    },
    "security_sales_1": {
      "task": "security_sales_1",
      "dataset_path": "jlm_fin_eval/datasets/security_sales_1/security_sales_1.py",
      "dataset_name": "security_sales_1",
      "test_split": "test",
      "doc_to_text": "def doc_to_text_00(doc):\n    doc_text = \"【問題】\\n\" + doc[\"question\"] + \"\\n\"\n    if doc[\"context\"] and doc[\"context\"] != \"\":\n        doc_text += doc[\"context\"] + \"\\n\"\n    doc_text += \"\\n【選択肢】\\n\"\n    for choice_id, choice_text in zip(doc[\"choices\"][\"id\"], doc[\"choices\"][\"text\"]):\n        doc_text += chr(choice_id + 65) + \": \" + choice_text + \"\\n\"\n    doc_text += \"\\n【答え】\\n\"\n    # doc_text += chr(int(doc[\"answer\"]) + 65)\n    return doc_text\n",
      "doc_to_target": "def doc_to_target_alphabet(doc):\n    answer = chr(int(doc[\"answer\"]) + 65)\n    return answer\n",
      "doc_to_choice": "def doc_to_choices_alphabet(doc):\n    choices = [chr(choice_id + 65) for choice_id in doc[\"choices\"][\"id\"]]\n    return choices\n",
      "description": "以下の問題の適切な答えを選択肢から選んでアルファベットで答えなさい。\n\n\n",
      "target_delimiter": "",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_2_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_3_norm",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "map_4_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "sentence",
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "chabsa": 1.0,
    "cma_basics": 1.0,
    "cpa_audit": 1.0,
    "fp2": 1.0,
    "security_sales_1": 1.0
  },
  "n-shot": {
    "chabsa": 0,
    "cma_basics": 0,
    "cpa_audit": 0,
    "fp2": 0,
    "security_sales_1": 0
  },
  "config": {
    "model": "vllm",
    "model_args": "pretrained=lmsys/vicuna-7b-v1.3,dtype=float16",
    "batch_size": 1,
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null
  },
  "git_hash": "f486b5d",
  "date": 1714409580.0215423,
  "pretty_env_info": "'NoneType' object has no attribute 'splitlines'",
  "transformers_version": "4.40.1",
  "upper_git_hash": null
}